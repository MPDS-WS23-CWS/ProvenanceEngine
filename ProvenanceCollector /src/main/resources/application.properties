# Port for the ProvCollector to start on
server.port=8081

# Properties for prometheus-server
prometheus.server.url=http://localhost:8080/api/v1/query
prometheus.queries= kube_pod_status_ready,\
kube_pod_info,\
kube_node_status_condition,\
kube_pod_container_resource_requests_cpu_cores,\
kube_pod_container_resource_limits_memory_bytes

# metric-profiles for scheduling optimization according to D-Prov Schema

# Metrics Profiles
# metrics.profile.workflow=kube_pod_created,kube_pod_deletion_timestamp
# metrics.profile.task=kube_pod_start_time,kube_pod_completion_time,kube_pod_status_phase
# metrics.profile.dataentity=kube_pod_container_resource_requests,kube_pod_container_resource_limits
# metrics.profile.resource=kube_pod_container_resource_requests_cpu_cores,kube_pod_container_resource_limits_memory_bytes
# metrics.profile.executionlog=kube_pod_status_reason,kube_pod_status_ready
# metrics.profile.node=kube_node_info,kube_serviceaccount_info
# metrics.profile.pod=kube_pod_info,kube_pod_status_scheduled,kube_pod_container_status_running